#!/usr/bin/env python3
"""
–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è telegramify-markdown –≤ –ø—Ä–æ–µ–∫—Ç–µ TGMaxSummarizer
"""

import asyncio
import logging
from telegram_message_sender import TelegramMessageSender
from telegram_formatter import TextContentType
from telegram.constants import ParseMode

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.DEBUG)
logger = logging.getLogger(__name__)

async def example_usage():
    """
    –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è telegramify-markdown
    """
    
    # –ü—Ä–∏–º–µ—Ä 1: –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π Markdown
    standard_markdown = """
# –ó–∞–≥–æ–ª–æ–≤–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–∞

–≠—Ç–æ **–∂–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç** –∏ *–∫—É—Ä—Å–∏–≤*.

## –°–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫
- –ú–æ–ª–æ–∫–æ
- –•–ª–µ–±
- –Ø–π—Ü–∞

### –ö–æ–¥
```python
def hello():
    print("Hello, World!")
```

[–°—Å—ã–ª–∫–∞ –Ω–∞ GitHub](https://github.com)
"""
    
    print("=== –ü–†–ò–ú–ï–† 1: –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π Markdown ===")
    print("–ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç:")
    print(standard_markdown)
    print("\n–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≤ Telegram MarkdownV2:")
    telegram_text = TelegramMessageSender.convert_standard_markdown_to_telegram(standard_markdown)
    print(telegram_text)
    print("\n" + "="*50 + "\n")
    
    # –ü—Ä–∏–º–µ—Ä 2: HTML –∫–æ–Ω—Ç–µ–Ω—Ç
    html_content = """
<h1>–û—Ç—á–µ—Ç –æ —Ä–∞–±–æ—Ç–µ</h1>
<p>–°–µ–≥–æ–¥–Ω—è –º—ã <strong>—É—Å–ø–µ—à–Ω–æ</strong> –∑–∞–≤–µ—Ä—à–∏–ª–∏ –ø—Ä–æ–µ–∫—Ç.</p>
<p>–û—Å–Ω–æ–≤–Ω—ã–µ <em>–¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è</em>:</p>
<ul>
    <li>–†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –Ω–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è</li>
    <li>–ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –±–∞–≥–∏</li>
    <li>–î–æ–±–∞–≤–ª–µ–Ω—ã —Ç–µ—Å—Ç—ã</li>
</ul>
<p>–ö–æ–¥ —Ñ—É–Ω–∫—Ü–∏–∏:</p>
<pre><code>def process_data(data):
    return data.upper()</code></pre>
<p>–ü–æ–¥—Ä–æ–±–Ω–µ–µ: <a href="https://example.com">–∑–¥–µ—Å—å</a></p>
"""
    
    print("=== –ü–†–ò–ú–ï–† 2: HTML –∫–æ–Ω—Ç–µ–Ω—Ç ===")
    print("–ò—Å—Ö–æ–¥–Ω—ã–π HTML:")
    print(html_content)
    print("\n–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≤ Telegram MarkdownV2:")
    telegram_html = TelegramMessageSender.convert_html_to_telegram_markdown(html_content)
    print(telegram_html)
    print("\n" + "="*50 + "\n")
    
    # –ü—Ä–∏–º–µ—Ä 3: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤ safe_send_message (—Å–∏–º—É–ª—è—Ü–∏—è)
    print("=== –ü–†–ò–ú–ï–† 3: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤ safe_send_message ===")
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ä–∞–∑–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    test_cases = [
        {
            "name": "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π Markdown",
            "text": "## –†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞\n\n**–°—Ç–∞—Ç—É—Å**: ‚úÖ –£—Å–ø–µ—à–Ω–æ\n\n*–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è*: 2.5 —Å–µ–∫—É–Ω–¥—ã",
            "content_type": TextContentType.STANDARD_MARKDOWN
        },
        {
            "name": "HTML –∫–æ–Ω—Ç–µ–Ω—Ç",
            "text": "<h2>–°–≤–æ–¥–∫–∞</h2><p><b>–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ</b>: 150 —Å–æ–æ–±—â–µ–Ω–∏–π</p><p><i>–û—à–∏–±–æ–∫</i>: 0</p>",
            "content_type": TextContentType.HTML
        },
        {
            "name": "–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç",
            "text": "**–í–∞–∂–Ω–æ**: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏\\!",
            "content_type": TextContentType.FORMATTED
        },
        {
            "name": "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π —Ç–µ–∫—Å—Ç",
            "text": "ERROR: Connection timeout after 30 seconds",
            "content_type": TextContentType.TECHNICAL
        }
    ]
    
    for i, case in enumerate(test_cases, 1):
        print(f"–¢–µ—Å—Ç {i}: {case['name']}")
        print(f"–ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç: {case['text']}")
        
        # –°–∏–º—É–ª–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É —Ç–µ–∫—Å—Ç–∞
        if case['content_type'] == TextContentType.STANDARD_MARKDOWN:
            processed_text = TelegramMessageSender.convert_standard_markdown_to_telegram(case['text'])
        elif case['content_type'] == TextContentType.HTML:
            processed_text = TelegramMessageSender.convert_html_to_telegram_markdown(case['text'])
        elif case['content_type'] == TextContentType.FORMATTED:
            from telegram_formatter import TelegramFormatter
            processed_text = TelegramFormatter.smart_escape_markdown_v2(case['text'])
        elif case['content_type'] == TextContentType.TECHNICAL:
            processed_text = f"`{case['text']}`"
        else:
            processed_text = case['text']
        
        print(f"–û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç: {processed_text}")
        print("-" * 30)

def demonstrate_telegramify_features():
    """
    –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ telegramify-markdown
    """
    import telegramify_markdown
    
    print("=== –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –í–û–ó–ú–û–ñ–ù–û–°–¢–ï–ô TELEGRAMIFY-MARKDOWN ===")
    
    # –°–ª–æ–∂–Ω—ã–π Markdown —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏
    complex_markdown = """
# üìä –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö

## üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
- **–í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π**: 1,234
- **–£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π**: 567
- **–°—Ä–µ–¥–Ω—è—è –¥–ª–∏–Ω–∞**: 45 —Å–∏–º–≤–æ–ª–æ–≤

### üîç –î–µ—Ç–∞–ª–∏
| –ú–µ—Ç—Ä–∏–∫–∞ | –ó–Ω–∞—á–µ–Ω–∏–µ | –ò–∑–º–µ–Ω–µ–Ω–∏–µ |
|---------|----------|-----------|
| –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å | 89% | ‚ÜóÔ∏è +5% |
| –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞ | 1.2—Å | ‚ÜòÔ∏è -0.3—Å |

### üíª –ö–æ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–∏
```python
def analyze_messages(messages):
    total = len(messages)
    unique_users = len(set(msg.user_id for msg in messages))
    avg_length = sum(len(msg.text) for msg in messages) / total
    return {
        'total': total,
        'unique_users': unique_users,
        'avg_length': avg_length
    }
```

### üìù –ü—Ä–∏–º–µ—á–∞–Ω–∏—è
> **–í–∞–∂–Ω–æ**: –î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç

[–ü–æ–¥—Ä–æ–±–Ω—ã–π –æ—Ç—á–µ—Ç](https://analytics.example.com/report)
"""
    
    print("–ò—Å—Ö–æ–¥–Ω—ã–π Markdown:")
    print(complex_markdown)
    print("\n" + "="*50)
    print("–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —á–µ—Ä–µ–∑ telegramify-markdown:")
    
    try:
        telegram_result = telegramify_markdown.markdownify(complex_markdown)
        print(telegram_result)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏: {e}")
        print("–ò—Å–ø–æ–ª—å–∑—É–µ–º fallback –º–µ—Ç–æ–¥...")
        telegram_result = TelegramMessageSender.convert_standard_markdown_to_telegram(complex_markdown)
        print(telegram_result)

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–º–µ—Ä–æ–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è telegramify-markdown\n")
    
    # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π
    demonstrate_telegramify_features()
    
    print("\n" + "="*60 + "\n")
    
    # –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
    asyncio.run(example_usage())
    
    print("\n‚úÖ –í—Å–µ –ø—Ä–∏–º–µ—Ä—ã –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    print("\nüìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é:")
    print("1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å: pip install telegramify-markdown")
    print("2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ TextContentType.STANDARD_MARKDOWN –¥–ª—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ Markdown")
    print("3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ TextContentType.HTML –¥–ª—è HTML –∫–æ–Ω—Ç–µ–Ω—Ç–∞")
    print("4. –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∞–µ—Ç fallback –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö")
