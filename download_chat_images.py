#!/usr/bin/env python3
"""
üñºÔ∏è –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏–∑ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —á–∞—Ç–∞

–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤—Å–µ—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏–∑ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —á–∞—Ç–∞ VK MAX.
"""

import asyncio
import logging
from datetime import datetime

from core.app_context import get_app_context
from infrastructure.vk.client import VKMaxClient
from shared.image_utils import ImageDownloader

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s',
    datefmt='%H:%M:%S'
)
logger = logging.getLogger(__name__)

async def download_chat_images(chat_title=None, days_back=7):
    """–ó–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —á–∞—Ç–∞"""
    logger.info("üñºÔ∏è –ó–ê–ì–†–£–ó–ö–ê –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô –ò–ó –ß–ê–¢–ê")
    logger.info("=" * 50)
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
        ctx = get_app_context()
        vk_client = VKMaxClient(ctx.config['bot'].vk_max_token)
        image_downloader = ImageDownloader()
        
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ VK MAX
        logger.info("üîó –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ VK MAX...")
        if not await vk_client.connect():
            logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ VK MAX")
            return
        
        # –ü–æ–ª—É—á–∞–µ–º —á–∞—Ç—ã
        logger.info("üìã –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤...")
        chats = await vk_client.get_available_chats()
        
        if not chats:
            logger.error("‚ùå –ß–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return
        
        # –í—ã–±–∏—Ä–∞–µ–º —á–∞—Ç
        if chat_title:
            selected_chat = None
            for chat in chats:
                if chat_title.lower() in chat.title.lower():
                    selected_chat = chat
                    break
            
            if not selected_chat:
                logger.error(f"‚ùå –ß–∞—Ç —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º '{chat_title}' –Ω–µ –Ω–∞–π–¥–µ–Ω")
                logger.info("üìù –î–æ—Å—Ç—É–ø–Ω—ã–µ —á–∞—Ç—ã:")
                for i, chat in enumerate(chats):
                    logger.info(f"  {i+1}. {chat.title}")
                return
        else:
            # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π —á–∞—Ç
            selected_chat = chats[0]
        
        logger.info(f"üéØ –í—ã–±—Ä–∞–Ω —á–∞—Ç: {selected_chat.title}")
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
        logger.info(f"üì® –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ {days_back} –¥–Ω–µ–π...")
        messages = await vk_client.load_chat_messages(selected_chat.id, days_back=days_back)
        logger.info(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {len(messages)}")
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        stats = {
            'messages_with_images': 0,
            'total_images': 0,
            'downloaded_images': 0,
            'errors': 0
        }
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
        for i, msg in enumerate(messages):
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º attachments —Ä–∞–∑–Ω—ã–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏
            attachments = None
            if hasattr(msg, 'attachments') and msg.attachments:
                attachments = msg.attachments
            elif hasattr(msg, 'attaches') and msg.attaches:
                attachments = msg.attaches
            
            if attachments:
                try:
                    # –ò–∑–≤–ª–µ–∫–∞–µ–º URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
                    image_urls = image_downloader.extract_image_urls(attachments)
                    
                    if image_urls:
                        stats['messages_with_images'] += 1
                        stats['total_images'] += len(image_urls)
                        
                        logger.info(f"üìé –°–æ–æ–±—â–µ–Ω–∏–µ {i+1}: –Ω–∞–π–¥–µ–Ω–æ {len(image_urls)} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
                        
                        # –°–∫–∞—á–∏–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                        for j, url in enumerate(image_urls):
                            try:
                                saved_path = await image_downloader.download_image(
                                    url, str(selected_chat.id), str(msg.id), j
                                )
                                
                                if saved_path:
                                    stats['downloaded_images'] += 1
                                    logger.info(f"   ‚úÖ –°–∫–∞—á–∞–Ω–æ: {saved_path}")
                                else:
                                    logger.warning(f"   ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ")
                                    
                            except Exception as e:
                                logger.error(f"   ‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: {e}")
                                stats['errors'] += 1
                
                except Exception as e:
                    logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
                    stats['errors'] += 1
        
        # –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        logger.info("\n" + "=" * 50)
        logger.info("üìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
        logger.info(f"   –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {len(messages)}")
        logger.info(f"   –°–æ–æ–±—â–µ–Ω–∏–π —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏: {stats['messages_with_images']}")
        logger.info(f"   –ù–∞–π–¥–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {stats['total_images']}")
        logger.info(f"   –°–∫–∞—á–∞–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {stats['downloaded_images']}")
        logger.info(f"   –û—à–∏–±–æ–∫: {stats['errors']}")
        
        if stats['total_images'] > 0:
            success_rate = (stats['downloaded_images'] / stats['total_images']) * 100
            logger.info(f"   –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: {success_rate:.1f}%")
        
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
    
    finally:
        if 'vk_client' in locals():
            await vk_client.disconnect()
            logger.info("‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ")

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    # –ú–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —á–∞—Ç–∞ –∏–ª–∏ –æ—Å—Ç–∞–≤–∏—Ç—å None –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ —á–∞—Ç–∞
    chat_title = None  # –ù–∞–ø—Ä–∏–º–µ—Ä: "1.4_–õ–∏—Ü–µ–π_–ò–¢"
    days_back = 7      # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
    
    await download_chat_images(chat_title, days_back)

if __name__ == "__main__":
    asyncio.run(main())
