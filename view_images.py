#!/usr/bin/env python3
"""
üñºÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π

–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏ –∞–Ω–∞–ª–∏–∑–∞ —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.
–ó–∞–ø—É—Å–∫: python view_images.py
"""

import os
import json
from pathlib import Path
from typing import Dict, List

from shared.image_viewer import ImageViewer

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üñºÔ∏è –ü–†–û–°–ú–û–¢–† –ó–ê–ì–†–£–ñ–ï–ù–ù–´–• –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô")
    print("=" * 40)
    
    try:
        viewer = ImageViewer()
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        print("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:")
        stats = viewer.get_image_stats()
        
        print(f"   –í—Å–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {stats.get('total_images', 0)}")
        print(f"   –ß–∞—Ç–æ–≤ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏: {stats.get('chats_with_images', 0)}")
        print(f"   –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä: {stats.get('total_size_mb', 0):.2f} MB")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–∞–ø–æ–∫
        images_path = Path("images")
        if not images_path.exists():
            print("\n‚ùå –ü–∞–ø–∫–∞ images –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return
        
        print(f"\nüìÅ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–∞–ø–æ–∫:")
        print(f"   –ë–∞–∑–æ–≤–∞—è –ø–∞–ø–∫–∞: {images_path.absolute()}")
        
        chats_path = images_path / "chats"
        if chats_path.exists():
            chat_folders = [f for f in chats_path.iterdir() if f.is_dir()]
            
            if not chat_folders:
                print("   üìÅ –ü–∞–ø–∫–∞ chats –ø—É—Å—Ç–∞—è")
            else:
                print(f"   üìÅ –ù–∞–π–¥–µ–Ω–æ {len(chat_folders)} —á–∞—Ç–æ–≤ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏:")
                
                for chat_folder in sorted(chat_folders):
                    image_files = list(chat_folder.glob("*"))
                    total_size = sum(f.stat().st_size for f in image_files if f.is_file())
                    size_mb = total_size / (1024 * 1024)
                    
                    print(f"      üìÇ {chat_folder.name}: {len(image_files)} —Ñ–∞–π–ª–æ–≤ ({size_mb:.2f} MB)")
                    
                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ–∞–π–ª–æ–≤
                    for i, img_file in enumerate(sorted(image_files)[:3]):
                        if img_file.is_file():
                            size_kb = img_file.stat().st_size / 1024
                            print(f"         üñºÔ∏è {img_file.name} ({size_kb:.1f} KB)")
                    
                    if len(image_files) > 3:
                        print(f"         ... –∏ –µ—â–µ {len(image_files) - 3} —Ñ–∞–π–ª–æ–≤")
        else:
            print("   üìÅ –ü–∞–ø–∫–∞ chats –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏ –ø–æ —á–∞—Ç–∞–º
        print(f"\nüîç –î–µ—Ç–∞–ª–∏ –ø–æ —á–∞—Ç–∞–º:")
        try:
            all_images = viewer.get_all_images()
            
            if not all_images:
                print("   –ù–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è")
            else:
                for chat_id, images in all_images.items():
                    print(f"   üì± –ß–∞—Ç {chat_id}: {len(images)} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
                    
                    for i, img_info in enumerate(images[:2]):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 2
                        size_kb = img_info.get('size', 0) / 1024
                        print(f"      üñºÔ∏è {img_info.get('filename', 'unknown')} - {size_kb:.1f} KB")
                    
                    if len(images) > 2:
                        print(f"      ... –∏ –µ—â–µ {len(images) - 2} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
        
        except Exception as e:
            print(f"   ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π: {e}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–∞–π–ª—ã –≤ –∫–æ—Ä–Ω–µ images
        print(f"\nüìÑ –§–∞–π–ª—ã –≤ –∫–æ—Ä–Ω–µ images:")
        root_files = [f for f in images_path.iterdir() if f.is_file()]
        
        if not root_files:
            print("   –ù–µ—Ç —Ñ–∞–π–ª–æ–≤ –≤ –∫–æ—Ä–Ω–µ")
        else:
            for file in root_files:
                size_kb = file.stat().st_size / 1024
                print(f"   üìÑ {file.name} ({size_kb:.1f} KB)")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    main()
