#!/usr/bin/env python3
"""
‚ö° –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏–∑ VK MAX

–ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.
–ó–∞–ø—É—Å–∫: python quick_image_test.py
"""

import asyncio
import logging
import json
from datetime import datetime

from core.app_context import get_app_context
from infrastructure.vk.client import VKMaxClient
from shared.image_utils import ImageDownloader

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s',
    datefmt='%H:%M:%S'
)
logger = logging.getLogger(__name__)

async def quick_test():
    """–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π"""
    logger.info("‚ö° –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç
        ctx = get_app_context()
        vk_token = ctx.config['bot'].vk_max_token
        
        if vk_token == "your_vk_max_token":
            logger.error("‚ùå VK MAX —Ç–æ–∫–µ–Ω –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            return
        
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ VK MAX
        logger.info("üîó –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ VK MAX...")
        vk_client = VKMaxClient(vk_token)
        
        if not await vk_client.connect():
            logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ VK MAX")
            return
        
        logger.info("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ")
        
        # –ü–æ–ª—É—á–∞–µ–º —á–∞—Ç—ã
        logger.info("üìã –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤...")
        chats = await vk_client.get_available_chats()
        
        if not chats:
            logger.error("‚ùå –ß–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return
        
        logger.info(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(chats)} —á–∞—Ç–æ–≤")
        
        # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π —á–∞—Ç
        test_chat = chats[0]
        logger.info(f"üéØ –¢–µ—Å—Ç–∏—Ä—É–µ–º —á–∞—Ç: {test_chat.title}")
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 –¥–Ω—è
        logger.info("üì® –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è...")
        messages = await vk_client.load_chat_messages(test_chat.id, days_back=3)
        
        logger.info(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(messages)} —Å–æ–æ–±—â–µ–Ω–∏–π")
        
        # –ò—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
        image_downloader = ImageDownloader()
        messages_with_images = 0
        total_images = 0
        
        for msg in messages:
            if msg.attachments:
                messages_with_images += 1
                logger.info(f"üì∑ –°–æ–æ–±—â–µ–Ω–∏–µ {msg.id} —Å–æ–¥–µ—Ä–∂–∏—Ç –≤–ª–æ–∂–µ–Ω–∏—è:")
                logger.info(f"   Attachments: {json.dumps(msg.attachments, indent=2, ensure_ascii=False)}")
                
                # –ò–∑–≤–ª–µ–∫–∞–µ–º URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
                image_urls = image_downloader.extract_image_urls(msg.attachments)
                logger.info(f"   –ò–∑–≤–ª–µ—á–µ–Ω–æ URL: {len(image_urls)}")
                
                for i, url in enumerate(image_urls):
                    logger.info(f"   URL {i+1}: {url}")
                    total_images += 1
                    
                    # –ü—Ä–æ–±—É–µ–º —Å–∫–∞—á–∞—Ç—å
                    try:
                        saved_path = await image_downloader.download_image(
                            url, test_chat.id, msg.id, i
                        )
                        if saved_path:
                            logger.info(f"   ‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {saved_path}")
                        else:
                            logger.warning(f"   ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å")
                    except Exception as e:
                        logger.error(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
        
        logger.info(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç:")
        logger.info(f"   –°–æ–æ–±—â–µ–Ω–∏–π —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏: {messages_with_images}")
        logger.info(f"   –í—Å–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {total_images}")
        
        # –û—Ç–∫–ª—é—á–∞–µ–º—Å—è
        await vk_client.disconnect()
        logger.info("‚úÖ –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç VK MAX")
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(quick_test())
