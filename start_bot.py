#!/usr/bin/env python3
"""
üöÄ –ï–î–ò–ù–´–ô –§–ê–ô–õ –ó–ê–ü–£–°–ö–ê TELEGRAM –ë–û–¢–ê
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞
–ó–∞–ø—É—Å–∫: python start_bot.py
"""
import os
import sys
import subprocess
import platform
from pathlib import Path

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞"""
    print("ü§ñ –ó–ê–ü–£–°–ö TELEGRAM –ë–û–¢–ê –î–õ–Ø VK MAX")
    print("=" * 40)
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
    project_dir = Path(__file__).parent.absolute()
    os.chdir(project_dir)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    config_files = [".env", "bot_config.env", "telegram_bot/.env"]
    config_found = False
    
    for config_file in config_files:
        if Path(config_file).exists():
            print(f"üìÅ –ù–∞–π–¥–µ–Ω —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {config_file}")
            config_found = True
            break
    
    if not config_found:
        print("‚ùå –§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        print("üí° –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env —Å —Ç–æ–∫–µ–Ω–∞–º–∏:")
        print("   TELEGRAM_BOT_TOKEN=–≤–∞—à_—Ç–æ–∫–µ–Ω")
        print("   VK_MAX_TOKEN=–≤–∞—à_—Ç–æ–∫–µ–Ω")
        print("   GIGACHAT_API_KEY=–≤–∞—à_–∫–ª—é—á")
        return 1
    
    print("üì¶ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –ª–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    try:
        result = subprocess.run([
            sys.executable, "-c", "import telegram, requests, websockets, python_max_client"
        ], capture_output=True, text=True)
        
        if result.returncode != 0:
            print("üì• –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...")
            install_result = subprocess.run([
                sys.executable, "-m", "pip", "install", "-r", "requirements.txt"
            ], capture_output=True, text=True)
            
            if install_result.returncode != 0:
                print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π: {install_result.stderr}")
                return 1
            print("‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        else:
            print("‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π: {e}")
        return 1
    
    print("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞...")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –Ω–∞–ø—Ä—è–º—É—é
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        from bot import VKMaxTelegramBot
        import asyncio
        
        async def run_bot():
            bot = VKMaxTelegramBot()
            try:
                await bot.start_polling()
            except KeyboardInterrupt:
                print("\nüëã –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
            finally:
                await bot.stop()
        
        asyncio.run(run_bot())
        
    except KeyboardInterrupt:
        print("\nüëã –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        if 'process' in locals():
            process.terminate()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}")
        if 'process' in locals():
            process.terminate()
        return 1
    
    return 0

if __name__ == "__main__":
    sys.exit(main())
